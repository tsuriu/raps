_id: spc_b86843e4e6cf4154b0e8af69e49ff33a
type: ApiSpec
parentId: wrk_495214786e3c4e62a506a52665a44c37
modified: 1672802543225
created: 1672799449234
fileName: RifaTu - API Service
contents: |
  openapi: 3.0.0
  info:
    title: Rifatu - API Service
    description: rifatu-api-service
    version: 1.0.0
    contact: 
      name: Tulio Amancio
      email: tulio.amancio@outlook.com
  servers:
    - url: http://localhost:8000
      description: Development Env
    - url: http://172.31.254.101:8000
      description: Homolog Env
  components:
    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
  tags:
    - name: Raffle
    - name: Users
    - name: Auth
  paths:
    /api/raffles:
      post:
        tags:
          - Raffle
        description: > 
          This is a health Checker
        operationId: postRaffle
        summary: Create Raffle
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  title: Cachacada FRUUU323
                  quantity: 60000
                  category: Cachaca
                  max_buy_quantity: 10
                  quota_value: 15.35
                  expire_reserve: 1d
                  prize_draw_date: 01/04/2023
                  prize_draw_place: Instagram
                  published: true
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/raffles/63b4bc3ee0056497965bef54:
      get:
        tags:
          - Raffle
        description: > 
          This is a health Checker
        operationId: getRaffle
        summary: Get Raffle
        responses:
          '200':
            description: OK
            headers:
              date:
                schema:
                  type: string
                  example: Tue, 03 Jan 2023 23:40:17 GMT
              server:
                schema:
                  type: string
                  example: uvicorn
              content-length:
                schema:
                  type: integer
                  example: 452
              content-type:
                schema:
                  type: string
                  example: application/json
            content:
              application/json:
                schema:
                  type: object
                example:
                  id: 63b4bc3ee0056497965bef54
                  user:
                    id: 63b3bf38db1647e0f3524fcb
                    name: John1
                    email: john1@gmail.com
                    phone: '829972345611'
                  title: Cachacada FRUUU323
                  quantity: 60000
                  category: Cachaca
                  max_buy_quantity: 10
                  quota_value: 15.35
                  expire_reserve: 1d
                  prize_draw_date: 01/04/2023
                  prize_draw_place: Instagram
                  published: true
                  published_at: null
                  created_at: '2023-01-03T23:37:34.862000'
                  updated_at: '2023-01-03T23:37:34.862000'
          '400':
            description: Bad Request
            headers:
              date:
                schema:
                  type: string
                  example: Tue, 03 Jan 2023 23:41:23 GMT
              server:
                schema:
                  type: string
                  example: uvicorn
              content-length:
                schema:
                  type: integer
                  example: 47
              content-type:
                schema:
                  type: string
                  example: application/json
            content:
              application/json:
                schema:
                  type: object
                example:
                  detail: 'Invalid id: 63b4bc3ee0056497965bef'
    /api/raffles/update/63b4bc3ee0056497965bef54:
      put:
        tags:
          - Raffle
        description: > 
          This is a health Checker
        operationId: putRaffle
        summary: Update Raffle
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  category: Vodka
                  expire_reserve: 30d
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/raffle/524161ee-0ac0-4500-b6e6-6c6e5b5f48e0:
      delete:
        tags:
          - Raffle
        description: > 
          This is a health Checker
        operationId: deleteRaffle
        summary: Delete Raffle
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/raffles/:
      get:
        tags:
          - Raffle
        description: > 
          This is a health Checker
        operationId: getAllRaffles
        summary: Get All Raffle
        parameters:
          - name: page
            in: query
            schema:
              type: integer
            example: 1
          - name: limit
            in: query
            schema:
              type: integer
            example: 20
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/users/me:
      get:
        tags:
          - Users
        description: > 
          This is a health Checker
        operationId: getUser
        summary: Get Me
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/users/all:
      get:
        tags:
          - Users
        description: > 
          This is a health Checker
        operationId: getAllUsers
        summary: Get All Users
        parameters:
          - name: page
            in: query
            schema:
              type: integer
            example: 1
          - name: limit
            in: query
            schema:
              type: integer
            example: 10
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/users/updateme/63af96257e697b23cf752f07:
      put:
        tags:
          - Users
        description: > 
          This is a health Checker
        operationId: putUserData
        summary: Update Me
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  phone: '0099723456201'
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
      delete:
        tags:
          - Users
        description: > 
          This is a health Checker
        operationId: deleteUser
        summary: Delete User
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/auth/register:
      post:
        tags:
          - Auth
        description: > 
          This is a health Checker
        operationId: postRegister
        summary: Signup
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  name: John1
                  email: john1@gmail.com
                  password: password123
                  phone: '829972345611'
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/auth/login:
      post:
        tags:
          - Auth
        description: > 
          This is a health Checker
        operationId: postLogin
        summary: Login
        requestBody:
          content:
            application/json:
              schema:
                type: object
                example:
                  email: john1@gmail.com
                  password: password123
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/auth/verifyemail/0f6d6bf54621240b76b0:
      get:
        tags:
          - Auth
        description: > 
          This is a health Checker
        operationId: getVerificationMail
        summary: Verify Email Address
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/auth/refresh:
      get:
        tags:
          - Auth
        description: > 
          This is a health Checker
        operationId: getNewToken
        summary: Refresh Access Token
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/auth/logout:
      get:
        tags:
          - Auth
        description: > 
          This is a health Checker
        operationId: getLogout
        summary: Logout
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
    /api/healthchecker:
      get:
        tags:
           - default
        description: > 
          This is a health Checker
        operationId: getHealthCheck
        summary: Health Checker
        responses:
          '200':
            description: Successful response
            content:
              application/json: {}
contentType: yaml
