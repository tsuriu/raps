{"_type":"export","__export_format":4,"__export_date":"2023-01-04T03:42:58.094Z","__export_source":"insomnia.desktop.app:v2022.7.0","resources":[{"_id":"req_wrk_495214786e3c4e62a506a52665a44c375e5e2fd8","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802195141,"created":1672802195141,"url":"{{ base_url }}/api/healthchecker","name":"Health Checker","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195141,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"wrk_495214786e3c4e62a506a52665a44c37","parentId":null,"modified":1672801402133,"created":1672799449231,"name":"RifaTu - API Service","description":"","scope":"design","_type":"workspace"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c3720e7e204","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","modified":1672802195151,"created":1672802195151,"url":"{{ base_url }}/api/auth/logout","name":"Logout","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195151,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802195230,"created":1672802195230,"name":"Auth","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1672802195230,"_type":"request_group"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37db89a95a","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","modified":1672802195154,"created":1672802195154,"url":"{{ base_url }}/api/auth/refresh","name":"Refresh Access Token","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1672802195154,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c370eabafbd","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","modified":1672802195157,"created":1672802195157,"url":"{{ base_url }}/api/auth/verifyemail/0f6d6bf54621240b76b0","name":"Verify Email Address","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195157,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37b8f3c7a1","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","modified":1672802195159,"created":1672802195159,"url":"{{ base_url }}/api/auth/login","name":"Login","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"email\": \"john1@gmail.com\",\n  \"password\": \"password123\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1672802195159,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c370ffb16da","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3735d0f5fb","modified":1672802195184,"created":1672802195184,"url":"{{ base_url }}/api/auth/register","name":"Signup","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"name\": \"John1\",\n  \"email\": \"john1@gmail.com\",\n  \"password\": \"password123\",\n  \"phone\": \"829972345611\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1672802195184,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c3738e8e88f","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3757f2b181","modified":1672802195188,"created":1672802195188,"url":"{{ base_url }}/api/users/updateme/63af96257e697b23cf752f07","name":"Delete User","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1672802195188,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_495214786e3c4e62a506a52665a44c3757f2b181","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802195235,"created":1672802195235,"name":"Users","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1672802195235,"_type":"request_group"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c370e7af14b","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3757f2b181","modified":1672802195191,"created":1672802195191,"url":"{{ base_url }}/api/users/updateme/63af96257e697b23cf752f07","name":"Update Me","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"phone\": \"0099723456201\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{"type":"bearer","token":"{{bearerToken}}","prefix":""},"metaSortKey":-1672802195191,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37cabe3097","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3757f2b181","modified":1672802195195,"created":1672802195195,"url":"{{ base_url }}/api/users/all","name":"Get All Users","description":"","method":"GET","body":{},"parameters":[{"name":"page","disabled":true,"value":"0"},{"name":"limit","disabled":true,"value":"0"}],"headers":[],"authentication":{},"metaSortKey":-1672802195195,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37abbd3e69","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c3757f2b181","modified":1672802195198,"created":1672802195198,"url":"{{ base_url }}/api/users/me","name":"Get Me","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195198,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c373a5dda47","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","modified":1672802195201,"created":1672802195201,"url":"{{ base_url }}/api/raffles/","name":"Get All Raffle","description":"","method":"GET","body":{},"parameters":[{"name":"page","disabled":true,"value":"0"},{"name":"limit","disabled":true,"value":"0"}],"headers":[],"authentication":{},"metaSortKey":-1672802195201,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802195239,"created":1672802195239,"name":"Raffle","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1672802195239,"_type":"request_group"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c376cbf1885","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","modified":1672802195203,"created":1672802195203,"url":"{{ base_url }}/api/raffle/524161ee-0ac0-4500-b6e6-6c6e5b5f48e0","name":"Delete Raffle","description":"","method":"DELETE","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195203,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37a90a4b85","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","modified":1672802195206,"created":1672802195206,"url":"{{ base_url }}/api/raffles/update/63b4bc3ee0056497965bef54","name":"Update Raffle","description":"","method":"PUT","body":{"mimeType":"application/json","text":"{\n  \"category\": \"Vodka\",\n  \"expire_reserve\": \"30d\"\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1672802195206,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c3738a0dccf","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","modified":1672802195208,"created":1672802195208,"url":"{{ base_url }}/api/raffles/63b4bc3ee0056497965bef54","name":"Get Raffle","description":"","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1672802195208,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_wrk_495214786e3c4e62a506a52665a44c37ff2a2a8d","parentId":"fld_wrk_495214786e3c4e62a506a52665a44c37ac37b40b","modified":1672802195213,"created":1672802195213,"url":"{{ base_url }}/api/raffles","name":"Create Raffle","description":"","method":"POST","body":{"mimeType":"application/json","text":"{\n  \"title\": \"Cachacada FRUUU323\",\n  \"quantity\": 60000,\n  \"category\": \"Cachaca\",\n  \"max_buy_quantity\": 10,\n  \"quota_value\": 15.35,\n  \"expire_reserve\": \"1d\",\n  \"prize_draw_date\": \"01/04/2023\",\n  \"prize_draw_place\": \"Instagram\",\n  \"published\": true\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json"}],"authentication":{},"metaSortKey":-1672802195213,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_d7e25107744afc0451093794bf384015fd8f0e20","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672799447138,"created":1672799447135,"name":"Base environment","data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1672799447135,"_type":"environment"},{"_id":"jar_d7e25107744afc0451093794bf384015fd8f0e20","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802687904,"created":1672799451870,"name":"Default Jar","cookies":[{"key":"access_token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI2M2IzYmYzOGRiMTY0N2UwZjM1MjRmY2IiLCJpYXQiOjE2NzI4MDI2ODcsIm5iZiI6MTY3MjgwMjY4NywianRpIjoiYTMxYjY0NjMtOTFhOS00MTk1LTk3ZDEtMzMzMzZkYTc2NDk0IiwiZXhwIjoxNjcyODAzNTg3LCJ0eXBlIjoiYWNjZXNzIiwiZnJlc2giOmZhbHNlfQ.PjmZCRHKrGDHsGpDndpPycPl5fsUoHe0QWiaPzIgfI9iMv3sl5F-2KNH8wH-Id8S49RRQWcYva_qFpppFGbQpA","expires":"2023-01-04T03:39:47.000Z","maxAge":900,"domain":"localhost","path":"/","httpOnly":true,"extensions":["SameSite=lax"],"hostOnly":true,"creation":"2023-01-04T03:23:38.104Z","lastAccessed":"2023-01-04T03:24:47.903Z","id":"2273362469497695"},{"key":"refresh_token","value":"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI2M2IzYmYzOGRiMTY0N2UwZjM1MjRmY2IiLCJpYXQiOjE2NzI4MDI2ODcsIm5iZiI6MTY3MjgwMjY4NywianRpIjoiMzNjODRjNGItMWJmZi00ZDU1LWJiY2UtNTdmMDNmOTQyZmYyIiwiZXhwIjoxNjcyODA2Mjg3LCJ0eXBlIjoicmVmcmVzaCJ9.NTE43M8UKhVq_hAXhcGYHf3jiwTkfrGp1z-v9jn1RyHYK-jPloPbTypuOmpgxNlL3hpLfRiSg4CJ4Y4Emov4XQ","expires":"2023-01-04T04:24:47.000Z","maxAge":3600,"domain":"localhost","path":"/","httpOnly":true,"extensions":["SameSite=lax"],"hostOnly":true,"creation":"2023-01-04T03:23:38.105Z","lastAccessed":"2023-01-04T03:24:47.904Z","id":"19063602202987173"},{"key":"logged_in","value":"True","expires":"2023-01-04T03:39:47.000Z","maxAge":900,"domain":"localhost","path":"/","extensions":["SameSite=lax"],"hostOnly":true,"creation":"2023-01-04T03:23:38.105Z","lastAccessed":"2023-01-04T03:24:47.904Z","id":"8361221388680358"}],"_type":"cookie_jar"},{"_id":"spc_b86843e4e6cf4154b0e8af69e49ff33a","parentId":"wrk_495214786e3c4e62a506a52665a44c37","modified":1672802543225,"created":1672799449234,"fileName":"RifaTu - API Service","contents":"openapi: 3.0.0\ninfo:\n  title: Rifatu - API Service\n  description: rifatu-api-service\n  version: 1.0.0\n  contact: \n    name: Tulio Amancio\n    email: tulio.amancio@outlook.com\nservers:\n  - url: http://localhost:8000\n    description: Development Env\n  - url: http://172.31.254.101:8000\n    description: Homolog Env\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\ntags:\n  - name: Raffle\n  - name: Users\n  - name: Auth\npaths:\n  /api/raffles:\n    post:\n      tags:\n        - Raffle\n      description: > \n        This is a health Checker\n      operationId: postRaffle\n      summary: Create Raffle\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                title: Cachacada FRUUU323\n                quantity: 60000\n                category: Cachaca\n                max_buy_quantity: 10\n                quota_value: 15.35\n                expire_reserve: 1d\n                prize_draw_date: 01/04/2023\n                prize_draw_place: Instagram\n                published: true\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/raffles/63b4bc3ee0056497965bef54:\n    get:\n      tags:\n        - Raffle\n      description: > \n        This is a health Checker\n      operationId: getRaffle\n      summary: Get Raffle\n      responses:\n        '200':\n          description: OK\n          headers:\n            date:\n              schema:\n                type: string\n                example: Tue, 03 Jan 2023 23:40:17 GMT\n            server:\n              schema:\n                type: string\n                example: uvicorn\n            content-length:\n              schema:\n                type: integer\n                example: 452\n            content-type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n              example:\n                id: 63b4bc3ee0056497965bef54\n                user:\n                  id: 63b3bf38db1647e0f3524fcb\n                  name: John1\n                  email: john1@gmail.com\n                  phone: '829972345611'\n                title: Cachacada FRUUU323\n                quantity: 60000\n                category: Cachaca\n                max_buy_quantity: 10\n                quota_value: 15.35\n                expire_reserve: 1d\n                prize_draw_date: 01/04/2023\n                prize_draw_place: Instagram\n                published: true\n                published_at: null\n                created_at: '2023-01-03T23:37:34.862000'\n                updated_at: '2023-01-03T23:37:34.862000'\n        '400':\n          description: Bad Request\n          headers:\n            date:\n              schema:\n                type: string\n                example: Tue, 03 Jan 2023 23:41:23 GMT\n            server:\n              schema:\n                type: string\n                example: uvicorn\n            content-length:\n              schema:\n                type: integer\n                example: 47\n            content-type:\n              schema:\n                type: string\n                example: application/json\n          content:\n            application/json:\n              schema:\n                type: object\n              example:\n                detail: 'Invalid id: 63b4bc3ee0056497965bef'\n  /api/raffles/update/63b4bc3ee0056497965bef54:\n    put:\n      tags:\n        - Raffle\n      description: > \n        This is a health Checker\n      operationId: putRaffle\n      summary: Update Raffle\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                category: Vodka\n                expire_reserve: 30d\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/raffle/524161ee-0ac0-4500-b6e6-6c6e5b5f48e0:\n    delete:\n      tags:\n        - Raffle\n      description: > \n        This is a health Checker\n      operationId: deleteRaffle\n      summary: Delete Raffle\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/raffles/:\n    get:\n      tags:\n        - Raffle\n      description: > \n        This is a health Checker\n      operationId: getAllRaffles\n      summary: Get All Raffle\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n          example: 1\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          example: 20\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/users/me:\n    get:\n      tags:\n        - Users\n      description: > \n        This is a health Checker\n      operationId: getUser\n      summary: Get Me\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/users/all:\n    get:\n      tags:\n        - Users\n      description: > \n        This is a health Checker\n      operationId: getAllUsers\n      summary: Get All Users\n      parameters:\n        - name: page\n          in: query\n          schema:\n            type: integer\n          example: 1\n        - name: limit\n          in: query\n          schema:\n            type: integer\n          example: 10\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/users/updateme/63af96257e697b23cf752f07:\n    put:\n      tags:\n        - Users\n      description: > \n        This is a health Checker\n      operationId: putUserData\n      summary: Update Me\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                phone: '0099723456201'\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n    delete:\n      tags:\n        - Users\n      description: > \n        This is a health Checker\n      operationId: deleteUser\n      summary: Delete User\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/auth/register:\n    post:\n      tags:\n        - Auth\n      description: > \n        This is a health Checker\n      operationId: postRegister\n      summary: Signup\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                name: John1\n                email: john1@gmail.com\n                password: password123\n                phone: '829972345611'\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/auth/login:\n    post:\n      tags:\n        - Auth\n      description: > \n        This is a health Checker\n      operationId: postLogin\n      summary: Login\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              example:\n                email: john1@gmail.com\n                password: password123\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/auth/verifyemail/0f6d6bf54621240b76b0:\n    get:\n      tags:\n        - Auth\n      description: > \n        This is a health Checker\n      operationId: getVerificationMail\n      summary: Verify Email Address\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/auth/refresh:\n    get:\n      tags:\n        - Auth\n      description: > \n        This is a health Checker\n      operationId: getNewToken\n      summary: Refresh Access Token\n      security:\n        - bearerAuth: []\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/auth/logout:\n    get:\n      tags:\n        - Auth\n      description: > \n        This is a health Checker\n      operationId: getLogout\n      summary: Logout\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n  /api/healthchecker:\n    get:\n      tags:\n         - default\n      description: > \n        This is a health Checker\n      operationId: getHealthCheck\n      summary: Health Checker\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json: {}\n","contentType":"yaml","_type":"api_spec"},{"_id":"env_env_d7e25107744afc0451093794bf384015fd8f0e20_sub__f02d8f8a","parentId":"env_d7e25107744afc0451093794bf384015fd8f0e20","modified":1672802577458,"created":1672802195242,"name":"Dev Environment","data":{"scheme":"http","base_path":"","host":"localhost:8000","bearerToken":"bearerToken"},"dataPropertyOrder":{"&":["scheme","base_path","host","bearerToken"]},"color":"#cb6767","isPrivate":false,"metaSortKey":1672802195242,"_type":"environment"},{"_id":"env_env_d7e25107744afc0451093794bf384015fd8f0e20_sub__e43c7409","parentId":"env_d7e25107744afc0451093794bf384015fd8f0e20","modified":1672802565767,"created":1672802502787,"name":"Homolog Environment","data":{"scheme":"http","base_path":"","host":"172.31.254.101:8000","bearerToken":"bearerToken"},"dataPropertyOrder":{"&":["scheme","base_path","host","bearerToken"]},"color":"#7d69cb","isPrivate":false,"metaSortKey":1672802502787,"_type":"environment"}]}